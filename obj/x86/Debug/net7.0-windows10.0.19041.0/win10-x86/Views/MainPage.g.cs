#pragma checksum "C:\Users\Antonio\Desktop\Proyects\DisenoInterfaces\ProyectoAplicacion\Views\MainPage.xaml" "{8829d00f-11b8-4213-878b-770e8597ac16}" "A7393DB719083744212281C4CEA2AD4136945DEF9B806E52C8B7FBFFB2636A18"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ProyectoAplicacion.Views
{
    partial class MainPage : 
        global::Microsoft.UI.Xaml.Controls.Page, 
        global::Microsoft.UI.Xaml.Markup.IComponentConnector
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2310")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private static class XamlBindingSetters
        {
            public static void Set_CommunityToolkit_WinUI_UI_Controls_DataGrid_ItemsSource(global::CommunityToolkit.WinUI.UI.Controls.DataGrid obj, global::System.Collections.IEnumerable value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Collections.IEnumerable) global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Collections.IEnumerable), targetNullValue);
                }
                obj.ItemsSource = value;
            }
            public static void Set_Microsoft_UI_Xaml_Controls_Primitives_ButtonBase_Command(global::Microsoft.UI.Xaml.Controls.Primitives.ButtonBase obj, global::System.Windows.Input.ICommand value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Windows.Input.ICommand) global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Windows.Input.ICommand), targetNullValue);
                }
                obj.Command = value;
            }
            public static void Set_Microsoft_UI_Xaml_Controls_ItemsControl_ItemsSource(global::Microsoft.UI.Xaml.Controls.ItemsControl obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.ItemsSource = value;
            }
            public static void Set_Microsoft_UI_Xaml_Controls_Primitives_Selector_SelectedItem(global::Microsoft.UI.Xaml.Controls.Primitives.Selector obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.SelectedItem = value;
            }
            public static void Set_Microsoft_UI_Xaml_Controls_TextBlock_Text(global::Microsoft.UI.Xaml.Controls.TextBlock obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.Text = value ?? global::System.String.Empty;
            }
        };

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2310")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class MainPage_obj1_Bindings :
            global::Microsoft.UI.Xaml.Markup.IDataTemplateComponent,
            global::Microsoft.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Microsoft.UI.Xaml.Markup.IComponentConnector,
            IMainPage_Bindings
        {
            private global::ProyectoAplicacion.Views.MainPage dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);

            // Fields for each control that has bindings.
            private global::CommunityToolkit.WinUI.UI.Controls.DataGrid obj3;
            private global::Microsoft.UI.Xaml.Controls.AppBarButton obj6;
            private global::Microsoft.UI.Xaml.Controls.AppBarButton obj7;
            private global::Microsoft.UI.Xaml.Controls.AppBarButton obj8;
            private global::Microsoft.UI.Xaml.Controls.AppBarButton obj9;
            private global::Microsoft.UI.Xaml.Controls.ComboBox obj10;
            private global::Microsoft.UI.Xaml.Controls.TextBlock obj11;
            private global::Microsoft.UI.Xaml.Controls.TextBlock obj12;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj3ItemsSourceDisabled = false;
            private static bool isobj6CommandDisabled = false;
            private static bool isobj7CommandDisabled = false;
            private static bool isobj8CommandDisabled = false;
            private static bool isobj9CommandDisabled = false;
            private static bool isobj10ItemsSourceDisabled = false;
            private static bool isobj10SelectedItemDisabled = false;
            private static bool isobj11TextDisabled = false;
            private static bool isobj12TextDisabled = false;

            private MainPage_obj1_BindingsTracking bindingsTracking;

            public MainPage_obj1_Bindings()
            {
                this.bindingsTracking = new MainPage_obj1_BindingsTracking(this);
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 70 && columnNumber == 13)
                {
                    isobj3ItemsSourceDisabled = true;
                }
                else if (lineNumber == 24 && columnNumber == 31)
                {
                    isobj6CommandDisabled = true;
                }
                else if (lineNumber == 26 && columnNumber == 31)
                {
                    isobj7CommandDisabled = true;
                }
                else if (lineNumber == 45 && columnNumber == 31)
                {
                    isobj8CommandDisabled = true;
                }
                else if (lineNumber == 48 && columnNumber == 31)
                {
                    isobj9CommandDisabled = true;
                }
                else if (lineNumber == 53 && columnNumber == 31)
                {
                    isobj10ItemsSourceDisabled = true;
                }
                else if (lineNumber == 53 && columnNumber == 74)
                {
                    isobj10SelectedItemDisabled = true;
                }
                else if (lineNumber == 41 && columnNumber == 32)
                {
                    isobj11TextDisabled = true;
                }
                else if (lineNumber == 33 && columnNumber == 32)
                {
                    isobj12TextDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 3: // Views\MainPage.xaml line 64
                        this.obj3 = global::WinRT.CastExtensions.As<global::CommunityToolkit.WinUI.UI.Controls.DataGrid>(target);
                        break;
                    case 6: // Views\MainPage.xaml line 23
                        this.obj6 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.AppBarButton>(target);
                        break;
                    case 7: // Views\MainPage.xaml line 25
                        this.obj7 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.AppBarButton>(target);
                        break;
                    case 8: // Views\MainPage.xaml line 44
                        this.obj8 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.AppBarButton>(target);
                        break;
                    case 9: // Views\MainPage.xaml line 47
                        this.obj9 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.AppBarButton>(target);
                        break;
                    case 10: // Views\MainPage.xaml line 53
                        this.obj10 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.ComboBox>(target);
                        this.bindingsTracking.RegisterTwoWayListener_10(this.obj10);
                        break;
                    case 11: // Views\MainPage.xaml line 41
                        this.obj11 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBlock>(target);
                        break;
                    case 12: // Views\MainPage.xaml line 33
                        this.obj12 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBlock>(target);
                        break;
                    default:
                        break;
                }
            }
                        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2310")]
                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
                        public global::Microsoft.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target) 
                        {
                            return null;
                        }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
            }

            public void Recycle()
            {
                return;
            }

            // IMainPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                if (newDataRoot != null)
                {
                    this.dataRoot = global::WinRT.CastExtensions.As<global::ProyectoAplicacion.Views.MainPage>(newDataRoot);
                    return true;
                }
                return false;
            }

            public void Activated(object obj, global::Microsoft.UI.Xaml.WindowActivatedEventArgs data)
            {
                this.Initialize();
            }

            public void Loading(global::Microsoft.UI.Xaml.FrameworkElement src, object data)
            {
                this.Initialize();
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::ProyectoAplicacion.Views.MainPage obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel(obj.ViewModel, phase);
                    }
                }
            }
            private void Update_ViewModel(global::ProyectoAplicacion.ViewModels.MainViewModel obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_ViewModel(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_Sitios(obj.Sitios, phase);
                        this.Update_ViewModel_FirstAsyncCommand(obj.FirstAsyncCommand, phase);
                        this.Update_ViewModel_PreviousAsyncCommand(obj.PreviousAsyncCommand, phase);
                        this.Update_ViewModel_NextAsyncCommand(obj.NextAsyncCommand, phase);
                        this.Update_ViewModel_LastAsyncCommand(obj.LastAsyncCommand, phase);
                    }
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_PageSizes(obj.PageSizes, phase);
                    }
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_PageSize(obj.PageSize, phase);
                        this.Update_ViewModel_PageCount(obj.PageCount, phase);
                        this.Update_ViewModel_PageNumber(obj.PageNumber, phase);
                    }
                }
            }
            private void Update_ViewModel_Sitios(global::System.Collections.ObjectModel.ObservableCollection<global::ProyectoAplicacion.dto.Sitio> obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_ViewModel_Sitios(obj);
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\MainPage.xaml line 64
                    if (!isobj3ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_CommunityToolkit_WinUI_UI_Controls_DataGrid_ItemsSource(this.obj3, obj, null);
                    }
                }
            }
            private void Update_ViewModel_FirstAsyncCommand(global::CommunityToolkit.Mvvm.Input.IAsyncRelayCommand obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_ViewModel_FirstAsyncCommand(obj);
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\MainPage.xaml line 23
                    if (!isobj6CommandDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_Primitives_ButtonBase_Command(this.obj6, obj, null);
                    }
                }
            }
            private void Update_ViewModel_PreviousAsyncCommand(global::CommunityToolkit.Mvvm.Input.IAsyncRelayCommand obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_ViewModel_PreviousAsyncCommand(obj);
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\MainPage.xaml line 25
                    if (!isobj7CommandDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_Primitives_ButtonBase_Command(this.obj7, obj, null);
                    }
                }
            }
            private void Update_ViewModel_NextAsyncCommand(global::CommunityToolkit.Mvvm.Input.IAsyncRelayCommand obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_ViewModel_NextAsyncCommand(obj);
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\MainPage.xaml line 44
                    if (!isobj8CommandDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_Primitives_ButtonBase_Command(this.obj8, obj, null);
                    }
                }
            }
            private void Update_ViewModel_LastAsyncCommand(global::CommunityToolkit.Mvvm.Input.IAsyncRelayCommand obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_ViewModel_LastAsyncCommand(obj);
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\MainPage.xaml line 47
                    if (!isobj9CommandDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_Primitives_ButtonBase_Command(this.obj9, obj, null);
                    }
                }
            }
            private void Update_ViewModel_PageSizes(global::System.Collections.Generic.List<global::System.Int32> obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\MainPage.xaml line 53
                    if (!isobj10ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj10, obj, null);
                    }
                }
            }
            private void Update_ViewModel_PageSize(global::System.Int32 obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\MainPage.xaml line 53
                    if (!isobj10SelectedItemDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_Primitives_Selector_SelectedItem(this.obj10, obj, null);
                    }
                }
            }
            private void Update_ViewModel_PageCount(global::System.Int32 obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\MainPage.xaml line 41
                    if (!isobj11TextDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_TextBlock_Text(this.obj11, obj.ToString(), null);
                    }
                }
            }
            private void Update_ViewModel_PageNumber(global::System.Int32 obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\MainPage.xaml line 33
                    if (!isobj12TextDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_TextBlock_Text(this.obj12, obj.ToString(), null);
                    }
                }
            }
            private void UpdateTwoWay_10_SelectedItem()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.PageSize = (global::System.Int32)this.obj10.SelectedItem;
                        }
                    }
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2310")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private class MainPage_obj1_BindingsTracking
            {
                private global::System.WeakReference<MainPage_obj1_Bindings> weakRefToBindingObj; 

                public MainPage_obj1_BindingsTracking(MainPage_obj1_Bindings obj)
                {
                    weakRefToBindingObj = new global::System.WeakReference<MainPage_obj1_Bindings>(obj);
                }

                public MainPage_obj1_Bindings TryGetBindingObject()
                {
                    MainPage_obj1_Bindings bindingObject = null;
                    if (weakRefToBindingObj != null)
                    {
                        weakRefToBindingObj.TryGetTarget(out bindingObject);
                        if (bindingObject == null)
                        {
                            weakRefToBindingObj = null;
                            ReleaseAllListeners();
                        }
                    }
                    return bindingObject;
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_ViewModel(null);
                    UpdateChildListeners_ViewModel_Sitios(null);
                    UpdateChildListeners_ViewModel_FirstAsyncCommand(null);
                    UpdateChildListeners_ViewModel_PreviousAsyncCommand(null);
                    UpdateChildListeners_ViewModel_NextAsyncCommand(null);
                    UpdateChildListeners_ViewModel_LastAsyncCommand(null);
                }

                public void PropertyChanged_ViewModel(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    MainPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::ProyectoAplicacion.ViewModels.MainViewModel obj = sender as global::ProyectoAplicacion.ViewModels.MainViewModel;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_ViewModel_Sitios(obj.Sitios, DATA_CHANGED);
                                bindings.Update_ViewModel_FirstAsyncCommand(obj.FirstAsyncCommand, DATA_CHANGED);
                                bindings.Update_ViewModel_PreviousAsyncCommand(obj.PreviousAsyncCommand, DATA_CHANGED);
                                bindings.Update_ViewModel_NextAsyncCommand(obj.NextAsyncCommand, DATA_CHANGED);
                                bindings.Update_ViewModel_LastAsyncCommand(obj.LastAsyncCommand, DATA_CHANGED);
                                bindings.Update_ViewModel_PageSize(obj.PageSize, DATA_CHANGED);
                                bindings.Update_ViewModel_PageCount(obj.PageCount, DATA_CHANGED);
                                bindings.Update_ViewModel_PageNumber(obj.PageNumber, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "Sitios":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_Sitios(obj.Sitios, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "FirstAsyncCommand":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_FirstAsyncCommand(obj.FirstAsyncCommand, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "PreviousAsyncCommand":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_PreviousAsyncCommand(obj.PreviousAsyncCommand, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "NextAsyncCommand":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_NextAsyncCommand(obj.NextAsyncCommand, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "LastAsyncCommand":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_LastAsyncCommand(obj.LastAsyncCommand, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "PageSize":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_PageSize(obj.PageSize, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "PageCount":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_PageCount(obj.PageCount, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "PageNumber":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_PageNumber(obj.PageNumber, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::ProyectoAplicacion.ViewModels.MainViewModel cache_ViewModel = null;
                public void UpdateChildListeners_ViewModel(global::ProyectoAplicacion.ViewModels.MainViewModel obj)
                {
                    if (obj != cache_ViewModel)
                    {
                        if (cache_ViewModel != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_ViewModel).PropertyChanged -= PropertyChanged_ViewModel;
                            cache_ViewModel = null;
                        }
                        if (obj != null)
                        {
                            cache_ViewModel = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_ViewModel;
                        }
                    }
                }
                public void PropertyChanged_ViewModel_Sitios(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    MainPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::System.Collections.ObjectModel.ObservableCollection<global::ProyectoAplicacion.dto.Sitio> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::ProyectoAplicacion.dto.Sitio>;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                        }
                        else
                        {
                            switch (propName)
                            {
                                default:
                                    break;
                            }
                        }
                    }
                }
                public void CollectionChanged_ViewModel_Sitios(object sender, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    MainPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::System.Collections.ObjectModel.ObservableCollection<global::ProyectoAplicacion.dto.Sitio> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::ProyectoAplicacion.dto.Sitio>;
                    }
                }
                private global::System.Collections.ObjectModel.ObservableCollection<global::ProyectoAplicacion.dto.Sitio> cache_ViewModel_Sitios = null;
                public void UpdateChildListeners_ViewModel_Sitios(global::System.Collections.ObjectModel.ObservableCollection<global::ProyectoAplicacion.dto.Sitio> obj)
                {
                    if (obj != cache_ViewModel_Sitios)
                    {
                        if (cache_ViewModel_Sitios != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_ViewModel_Sitios).PropertyChanged -= PropertyChanged_ViewModel_Sitios;
                            ((global::System.Collections.Specialized.INotifyCollectionChanged)cache_ViewModel_Sitios).CollectionChanged -= CollectionChanged_ViewModel_Sitios;
                            cache_ViewModel_Sitios = null;
                        }
                        if (obj != null)
                        {
                            cache_ViewModel_Sitios = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_ViewModel_Sitios;
                            ((global::System.Collections.Specialized.INotifyCollectionChanged)obj).CollectionChanged += CollectionChanged_ViewModel_Sitios;
                        }
                    }
                }
                public void PropertyChanged_ViewModel_FirstAsyncCommand(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    MainPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::CommunityToolkit.Mvvm.Input.IAsyncRelayCommand obj = sender as global::CommunityToolkit.Mvvm.Input.IAsyncRelayCommand;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                        }
                        else
                        {
                            switch (propName)
                            {
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::CommunityToolkit.Mvvm.Input.IAsyncRelayCommand cache_ViewModel_FirstAsyncCommand = null;
                public void UpdateChildListeners_ViewModel_FirstAsyncCommand(global::CommunityToolkit.Mvvm.Input.IAsyncRelayCommand obj)
                {
                    if (obj != cache_ViewModel_FirstAsyncCommand)
                    {
                        if (cache_ViewModel_FirstAsyncCommand != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_ViewModel_FirstAsyncCommand).PropertyChanged -= PropertyChanged_ViewModel_FirstAsyncCommand;
                            cache_ViewModel_FirstAsyncCommand = null;
                        }
                        if (obj != null)
                        {
                            cache_ViewModel_FirstAsyncCommand = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_ViewModel_FirstAsyncCommand;
                        }
                    }
                }
                public void PropertyChanged_ViewModel_PreviousAsyncCommand(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    MainPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::CommunityToolkit.Mvvm.Input.IAsyncRelayCommand obj = sender as global::CommunityToolkit.Mvvm.Input.IAsyncRelayCommand;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                        }
                        else
                        {
                            switch (propName)
                            {
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::CommunityToolkit.Mvvm.Input.IAsyncRelayCommand cache_ViewModel_PreviousAsyncCommand = null;
                public void UpdateChildListeners_ViewModel_PreviousAsyncCommand(global::CommunityToolkit.Mvvm.Input.IAsyncRelayCommand obj)
                {
                    if (obj != cache_ViewModel_PreviousAsyncCommand)
                    {
                        if (cache_ViewModel_PreviousAsyncCommand != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_ViewModel_PreviousAsyncCommand).PropertyChanged -= PropertyChanged_ViewModel_PreviousAsyncCommand;
                            cache_ViewModel_PreviousAsyncCommand = null;
                        }
                        if (obj != null)
                        {
                            cache_ViewModel_PreviousAsyncCommand = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_ViewModel_PreviousAsyncCommand;
                        }
                    }
                }
                public void PropertyChanged_ViewModel_NextAsyncCommand(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    MainPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::CommunityToolkit.Mvvm.Input.IAsyncRelayCommand obj = sender as global::CommunityToolkit.Mvvm.Input.IAsyncRelayCommand;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                        }
                        else
                        {
                            switch (propName)
                            {
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::CommunityToolkit.Mvvm.Input.IAsyncRelayCommand cache_ViewModel_NextAsyncCommand = null;
                public void UpdateChildListeners_ViewModel_NextAsyncCommand(global::CommunityToolkit.Mvvm.Input.IAsyncRelayCommand obj)
                {
                    if (obj != cache_ViewModel_NextAsyncCommand)
                    {
                        if (cache_ViewModel_NextAsyncCommand != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_ViewModel_NextAsyncCommand).PropertyChanged -= PropertyChanged_ViewModel_NextAsyncCommand;
                            cache_ViewModel_NextAsyncCommand = null;
                        }
                        if (obj != null)
                        {
                            cache_ViewModel_NextAsyncCommand = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_ViewModel_NextAsyncCommand;
                        }
                    }
                }
                public void PropertyChanged_ViewModel_LastAsyncCommand(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    MainPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::CommunityToolkit.Mvvm.Input.IAsyncRelayCommand obj = sender as global::CommunityToolkit.Mvvm.Input.IAsyncRelayCommand;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                        }
                        else
                        {
                            switch (propName)
                            {
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::CommunityToolkit.Mvvm.Input.IAsyncRelayCommand cache_ViewModel_LastAsyncCommand = null;
                public void UpdateChildListeners_ViewModel_LastAsyncCommand(global::CommunityToolkit.Mvvm.Input.IAsyncRelayCommand obj)
                {
                    if (obj != cache_ViewModel_LastAsyncCommand)
                    {
                        if (cache_ViewModel_LastAsyncCommand != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_ViewModel_LastAsyncCommand).PropertyChanged -= PropertyChanged_ViewModel_LastAsyncCommand;
                            cache_ViewModel_LastAsyncCommand = null;
                        }
                        if (obj != null)
                        {
                            cache_ViewModel_LastAsyncCommand = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_ViewModel_LastAsyncCommand;
                        }
                    }
                }
                public void RegisterTwoWayListener_10(global::Microsoft.UI.Xaml.Controls.ComboBox sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.Primitives.Selector.SelectedItemProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_10_SelectedItem();
                        }
                    });
                }
            }
        }

        /// <summary>
        /// Connect()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2310")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Connect(int connectionId, object target)
        {
            switch(connectionId)
            {
            case 2: // Views\MainPage.xaml line 10
                {
                    this.ContentArea = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Grid>(target);
                }
                break;
            case 3: // Views\MainPage.xaml line 64
                {
                    this.dataGrid = global::WinRT.CastExtensions.As<global::CommunityToolkit.WinUI.UI.Controls.DataGrid>(target);
                    ((global::CommunityToolkit.WinUI.UI.Controls.DataGrid)this.dataGrid).Sorting += this.DG_Sorting;
                    ((global::CommunityToolkit.WinUI.UI.Controls.DataGrid)this.dataGrid).AutoGeneratingColumn += this.DG_AutoGeneratingColumn;
                    ((global::CommunityToolkit.WinUI.UI.Controls.DataGrid)this.dataGrid).SelectionChanged += this.DG_Selection;
                }
                break;
            case 4: // Views\MainPage.xaml line 18
                {
                    this.editButton = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.AppBarButton>(target);
                    ((global::Microsoft.UI.Xaml.Controls.AppBarButton)this.editButton).Click += this.editButtonClick;
                }
                break;
            case 5: // Views\MainPage.xaml line 19
                {
                    this.deleteButton = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.AppBarButton>(target);
                    ((global::Microsoft.UI.Xaml.Controls.AppBarButton)this.deleteButton).Click += this.deleteButtonClick;
                }
                break;
            default:
                break;
            }
            this._contentLoaded = true;
        }

        /// <summary>
        /// GetBindingConnector(int connectionId, object target)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2310")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target)
        {
            global::Microsoft.UI.Xaml.Markup.IComponentConnector returnValue = null;
            switch(connectionId)
            {
            case 1: // Views\MainPage.xaml line 1
                {                    
                    global::Microsoft.UI.Xaml.Controls.Page element1 = (global::Microsoft.UI.Xaml.Controls.Page)target;
                    MainPage_obj1_Bindings bindings = new MainPage_obj1_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(this);
                    this.Bindings = bindings;
                    element1.Loading += bindings.Loading;
                    global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element1, bindings);
                }
                break;
            }
            return returnValue;
        }
    }
}

